# Generated by Django 5.0.2 on 2024-09-04 07:17

import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import markdownx.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('home', '0009_alter_eventyear_id_alter_pyconevent_id'),
        ('registration', '0012_rename_is_from_a_sponsor_profile_is_a_sponsor_or_keynote_speaker'),
        ('sponsors', '0009_alter_sponsor_show_biography_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(help_text='Event PyCon Africa', max_length=250)),
                ('event_image', models.ImageField(default='event.png', help_text='Upload your cover image or leave blank to use our default image', upload_to='event_page')),
                ('event_description', markdownx.models.MarkdownxField(default='', help_text='[Supports Markdown] - Event description.')),
                ('cost', models.CharField(blank=True, default='Free', help_text='Event Cost', max_length=250)),
                ('venue', models.CharField(blank=True, default='(TBD)', help_text='Event Venue', max_length=250)),
                ('website_link', models.URLField(blank=True, default='', help_text='Link to registration form if External')),
                ('registration_link', models.TextField(blank=True, default='', help_text='Link to registration form')),
                ('is_a_google_form', models.BooleanField(default=False)),
                ('google_form_formfacade_code', models.TextField(blank=True, default='', help_text='Link to your google form')),
                ('mentors_form_formfacade_code', models.TextField(blank=True, default='', help_text='Link to your google form for mentors', null=True)),
                ('organizer', models.CharField(blank=True, default='(TBD)', help_text='Event Organizer', max_length=250)),
                ('organizer_website', models.URLField(blank=True, default='', help_text='Event Organizer site', max_length=250)),
                ('section_one', markdownx.models.MarkdownxField(default='', help_text='[Supports Markdown] - Event PyCon Africa.')),
                ('section_two', markdownx.models.MarkdownxField(blank=True, default='', help_text='[Supports Markdown] - Event PyCon Africa.')),
                ('wsya_section_one', markdownx.models.MarkdownxField(blank=True, default='', help_text='[Supports Markdown] - Why Should You Attend Event PyCon Africa.')),
                ('wsya_section_two', markdownx.models.MarkdownxField(blank=True, default='', help_text='[Supports Markdown] - Why Should You Attend Event PyCon Africa.')),
                ('wsya_section_three', markdownx.models.MarkdownxField(blank=True, default='', help_text='[Supports Markdown] - Why Should You Attend Event PyCon Africa.')),
                ('wsya_section_four', markdownx.models.MarkdownxField(blank=True, default='', help_text='[Supports Markdown] - Why Should You Attend Event PyCon Africa.')),
                ('have_speakers', models.BooleanField(default=False)),
                ('speaker_session_title', models.CharField(blank=True, default='Speakers', help_text='Session Title eg. Speakers, Team, Mentor', max_length=250)),
                ('sponsor_session_title', models.CharField(blank=True, default='Sponsors', help_text='Session Title eg. Sponsor, Support, Thanks', max_length=250)),
                ('have_sponsors', models.BooleanField(default=False)),
                ('schedule', markdownx.models.MarkdownxField(blank=True, default='', help_text='[Supports Markdown] - Event Schedule.', null=True)),
                ('have_a_confirmed_time', models.BooleanField(default=False)),
                ('start_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_published', models.DateTimeField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DRAFTED', 'Draft'), ('PUBLISHED', 'Publish')], default='draft', max_length=10)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='event_title')),
                ('event_year', models.ForeignKey(default='', help_text='The event year this proposal is for', on_delete=django.db.models.deletion.CASCADE, related_name='events', to='home.eventyear')),
                ('speaker', models.ManyToManyField(blank=True, to='registration.profile', verbose_name='Speaker')),
                ('sponsor', models.ManyToManyField(blank=True, to='sponsors.sponsor', verbose_name='Sponsor')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_us', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_published',),
                'unique_together': {('event_title',)},
            },
        ),
    ]
