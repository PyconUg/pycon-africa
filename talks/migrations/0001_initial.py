# Generated by Django 5.0.2 on 2024-02-29 23:00

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import embed_video.fields
import hashid_field.field
import markdownx.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('document', models.FileField(upload_to='documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CFP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Code of Conduct PyCon Africa', max_length=250)),
                ('start_time', models.DateTimeField(help_text='Date and time when the Call for proposal will start', null=True)),
                ('end_time', models.DateTimeField(blank=True, help_text='Date and time when the Call for proposal will end', null=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(default=django.contrib.auth.models.User, on_delete=django.db.models.deletion.CASCADE, related_name='cfp', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('email', models.EmailField(help_text='It will be kept secretly from the Public', max_length=254)),
                ('title', models.CharField(help_text='Public title. What topic/project is it all about?', max_length=1024)),
                ('talk_type', models.CharField(choices=[('Lightning Talk', 'Lightning Talk - 5 mins'), ('Short Talk', 'Short Talk - 30 mins'), ('Long Talk', 'Long Talk - 45 mins'), ('Tutorial', 'Tutorial - 2 hours'), ('Keynote Speaker', 'Keynote Speaker')], max_length=50)),
                ('talk_category', models.CharField(choices=[('GP / Web', 'General Python, Web/DevOps'), ('GC', 'General Community'), ('ET', 'Emerging Technologies'), ('Education', 'Education'), ('O', 'Other')], max_length=50)),
                ('proposal_id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', default=None, min_length=7, prefix='', primary_key=True, serialize=False)),
                ('elevator_pitch', markdownx.models.MarkdownxField(blank=True, help_text='[Supports Markdown] - Describe your Talk to your targeted audience . Please include the requirements: libraries and Python version to be installed, required experience with topics/libraries, etc.', null=True)),
                ('talk_abstract', markdownx.models.MarkdownxField(blank=True, default='', help_text='[Supports Markdown] - Your talk_abstract.', null=True)),
                ('status', models.CharField(choices=[('S', 'Submitted'), ('A', 'Accepted'), ('W', 'Waiting List'), ('R', 'Rejected')], default='S', max_length=1)),
                ('intended_audience', models.CharField(blank=True, choices=[('BGN-L', 'Beginner Level'), ('INT-L', 'Intermediate Level'), ('EXP-L', 'Expert Level')], max_length=50, null=True)),
                ('link_to_preview_video_url', embed_video.fields.EmbedVideoField(blank=True, default='', help_text='Link to Preview video on your Youtube or Google drive')),
                ('anything_else_you_want_to_tell_us', markdownx.models.MarkdownxField(blank=True, default='', help_text='Kindly add anything else you want to tell us?.', null=True)),
                ('recording_release', models.BooleanField(default=True)),
                ('youtube_video_url', models.URLField(blank=True, default='', help_text='Link to Talk on youtube Video')),
                ('youtube_iframe_url', models.URLField(blank=True, default='', help_text='Link to Youtube Iframe', max_length=300)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Proposing_talk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Speak at PyCon Africa', max_length=250)),
                ('content', markdownx.models.MarkdownxField(default='', help_text='[Supports Markdown] - Content.')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(default=django.contrib.auth.models.User, on_delete=django.db.models.deletion.CASCADE, related_name='proposing_talk', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Recording GL at PyCon Africa', max_length=250)),
                ('content', markdownx.models.MarkdownxField(default='', help_text='[Supports Markdown] - Content.')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(default=django.contrib.auth.models.User, on_delete=django.db.models.deletion.CASCADE, related_name='recording', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Speak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Speak at PyCon Africa', max_length=250)),
                ('content', markdownx.models.MarkdownxField(default='', help_text='[Supports Markdown] - Content for speaking at PyCon Africa.')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(default=django.contrib.auth.models.User, on_delete=django.db.models.deletion.CASCADE, related_name='speak', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
